/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * newTransaction.java
 *
 * Created on 02-Oct-2010, 20:38:30
 */
package LibraryApplication;

/**
 *
 * @author FOUR.TWO
 */
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.*;

public class newTransaction extends javax.swing.JInternalFrame {

    /** Creates new form newTransaction */
    public newTransaction() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        itemComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        itemTextField = new javax.swing.JTextField();
        ddTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        borrowButton = new javax.swing.JButton();
        clearButton1 = new javax.swing.JButton();
        cancelButton1 = new javax.swing.JButton();
        idTextField = new javax.swing.JTextField();
        getButton = new javax.swing.JButton();
        pendingLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        amountTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        memberIDTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        detailsButton = new javax.swing.JButton();
        Labelpending = new javax.swing.JLabel();
        returnButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        returnLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        fineTextField = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setClosable(true);
        setTitle("Transactions");

        jLabel1.setText("Member ID:");

        itemComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Book", "Video", "Magazine", "Audio" }));

        jLabel2.setText("Item:");

        jLabel3.setText("Item ID:");

        jLabel4.setText("Date Due:");

        borrowButton.setText("Borrow");
        borrowButton.setEnabled(false);
        borrowButton.setPreferredSize(new java.awt.Dimension(73, 23));
        borrowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowButtonActionPerformed(evt);
            }
        });

        clearButton1.setText("Clear");
        clearButton1.setPreferredSize(new java.awt.Dimension(73, 23));
        clearButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButton1ActionPerformed(evt);
            }
        });

        cancelButton1.setText("Cancel");
        cancelButton1.setPreferredSize(new java.awt.Dimension(73, 23));
        cancelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButton1ActionPerformed(evt);
            }
        });

        idTextField.setPreferredSize(new java.awt.Dimension(59, 20));

        getButton.setText("Get Details");
        getButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getButtonActionPerformed(evt);
            }
        });

        pendingLabel.setText("jLabel12");

        jLabel13.setText("Pending Item(s)");

        tLabel.setText("PleaseEnter Member ID, Click Get Details Fill Other Details Then Click Add");

        jLabel7.setText("[yyyy-MM-dd] FORMAT");

        jLabel9.setText("Amount Payable:");

        amountTextField.setPreferredSize(new java.awt.Dimension(59, 20));

        jLabel10.setText("KShs.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(166, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel13)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(borrowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(cancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pendingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(itemTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(ddTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(itemComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(305, 305, 305))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getButton)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pendingLabel)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(itemTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ddTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borrowButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Borrow", jPanel1);

        jLabel5.setText("Member ID:");

        jLabel6.setText("Item(s) Borrowed:");

        detailsButton.setText("Find Item");
        detailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailsButtonActionPerformed(evt);
            }
        });

        returnButton.setText("Return");
        returnButton.setEnabled(false);
        returnButton.setPreferredSize(new java.awt.Dimension(73, 23));
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setPreferredSize(new java.awt.Dimension(73, 23));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("PleaseEnter Member ID, Click Find Details Then Click Return");

        jLabel11.setText("Fine To Be Charged:");

        jLabel12.setText("KShs.");

        fineTextField.setText("0");

        clearButton.setText("Clear");
        clearButton.setPreferredSize(new java.awt.Dimension(73, 23));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(memberIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(detailsButton))
                        .addComponent(Labelpending, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(returnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fineTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(memberIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(detailsButton))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Labelpending))
                .addGap(18, 18, 18)
                .addComponent(returnLabel)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(fineTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Return", jPanel2);

        closeButton.setText("Close");
        closeButton.setPreferredSize(new java.awt.Dimension(73, 23));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(700, Short.MAX_VALUE)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_cancelButtonActionPerformed

    private void clearButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButton1ActionPerformed
        // TODO add your handling code here:
        idTextField.setText("");
        idTextField.setEditable(true);
        itemTextField.setText("");
        ddTextField.setText("");
        amountTextField.setText("");
        borrowButton.setEnabled(false);
        
    }//GEN-LAST:event_clearButton1ActionPerformed

    private void cancelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelButton1ActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed
    String storeid, storeitemid;
    int storeitem;
    private void getButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getButtonActionPerformed
        // TODO add your handling code here:
        String feedback = "";
        String id = idTextField.getText();
        storeid = id;
        try {
            ResultSet result = null, result1 = null;
            Connection con = null;
            //Load JBBC driver "com.mysql.jdbc.Driver"
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "");

            PreparedStatement statement = con.prepareStatement("SELECT * FROM library.transactions WHERE memberID = '" + id + "' AND rDate = '2000-01-01'");
            result = statement.executeQuery();
            int i = 0;
            while (result.next()) {
                if (i > 0) {
                    feedback += ", ";
                }
                String itemid = result.getString(3);
                int item = Integer.parseInt(result.getString(8));

                switch (item) {

                    case 0:
                        // tLabel.setText("case 0");
                        PreparedStatement statement1 = con.prepareStatement("SELECT * FROM library.books WHERE id = '" + itemid + "'");
                        result1 = statement1.executeQuery();
                        while (result1.next()) {
                            feedback += result1.getString(2);
                        }
                        break;
                    case 1:
                        //tLabel.setText("case 1");
                        PreparedStatement statement2 = con.prepareStatement("SELECT * FROM library.videos WHERE id = '" + itemid + "'");
                        result1 = statement2.executeQuery();
                        while (result1.next()) {
                            feedback += result1.getString(2);
                        }
                        break;
                    case 2:
                        // tLabel.setText("case 2");
                        PreparedStatement statement3 = con.prepareStatement("SELECT * FROM library.magazines WHERE id = '" + itemid + "'");
                        result1 = statement3.executeQuery();
                        while (result1.next()) {
                            feedback += result1.getString(2);
                        }
                        break;
                    case 3:
                        //tLabel.setText("case 3");
                        PreparedStatement statement4 = con.prepareStatement("SELECT * FROM library.audio WHERE id = '" + itemid + "'");
                        result1 = statement4.executeQuery();
                        while (result1.next()) {
                            feedback += result1.getString(2);
                        }
                        break;

                }
                i += 1;
            }

            result.close();
            con.close();

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        pendingLabel.setText(feedback);
        borrowButton.setEnabled(true);
        idTextField.setEditable(false);
}//GEN-LAST:event_getButtonActionPerformed
    String storeamountstring = null, storedatedue = null;
    private void borrowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowButtonActionPerformed
        // TODO add your handling code here:
        String feedback = "Transaction storage not successful";
        String owingString = null;
        String memberid = idTextField.getText();
        storeid = memberid;
        //tLabel.setText(storeid);
        int item = itemComboBox.getSelectedIndex();
        storeitem = item;
        String itemid = itemTextField.getText();
        storeitemid = itemid;
        String duedate = ddTextField.getText();
        storedatedue = duedate;
        String amountString = amountTextField.getText();
        storeamountstring = amountString;
        int amount = 0, owing = 0;
        String date = null;
        String notavailable = null;

        if (amountString.length() > 0) {
            try {
                amount = Integer.parseInt(amountString);

            } catch (Exception e) {
                amount = 0;
            }
        }


        int updateQuery = 0, updateQuery1 = 0, updateQuery4;
        try {
            Connection con = null;
            //Load JBBC driver "com.mysql.jdbc.Driver"
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "");

            PreparedStatement statement2 = con.prepareStatement("SELECT * FROM library.transactions WHERE item = '" + item + "' AND itemID = '" + itemid + "' AND rDate = '2000-01-01'");
            ResultSet result = statement2.executeQuery();
            int i = 0;
            while (result.next()) {
                notavailable = result.getString(5);
                i += 1;
            }

            if (i == 0) {
                try {
                    PreparedStatement statement = con.prepareStatement("INSERT INTO library.transactions (memberID, itemID, bDate, dDate, item) VALUES ('" + memberid + "', '" + itemid + "', CURDATE(), '" + duedate + "', '" + item + "')");
                    updateQuery = statement.executeUpdate();
                    String table = null;
                    if (updateQuery != 0) {
                        switch (item) {
                            case 0:
                                table = "library.books";
                                break;
                            case 1:
                                table = "library.videos";
                                break;
                            case 2:
                                table = "library.magazines";
                                break;
                            case 3:
                                table = "library.audio";
                                break;
                        }
                        try {

                            PreparedStatement statement1 = con.prepareStatement("UPDATE " + table + " SET status = 0 WHERE id = '" + itemid + "'");
                            updateQuery1 = statement1.executeUpdate();
                            if (updateQuery1 != 0) {

                                PreparedStatement statement3 = con.prepareStatement("SELECT owing, (select CURDATE()) as date FROM library.members WHERE id = '" + memberid + "'");
                                ResultSet result3 = statement3.executeQuery();
                                while (result3.next()) {
                                    owingString = result3.getString(1);
                                    owing = Integer.parseInt(owingString);
                                    int newOwing = owing + amount;
                                    date = result3.getString(2);
                                    try {

                                        //PreparedStatement statement4 = con.prepareStatement("UPDATE library.members SET owing = " + newOwing + " WHERE id = '" + memberid + "'");
                                        PreparedStatement statement4 = con.prepareStatement("UPDATE library.members SET owing = '" + newOwing + "' WHERE id = '" + memberid + "'");
                                        //UPDATE library.members SET owing = '1000' WHERE id = '2';
                                        updateQuery4 = statement4.executeUpdate();
                                        if (updateQuery4 != 0) {
                                            feedback = "Transaction Details Have Been Stored, Find Receipt At C:\\Receipt";
                                            printReceipt(date, memberid, item, itemid);
                                        }
                                    } catch (Exception e) {
                                        feedback = "ERROR 3" + newOwing + memberid;
                                    }
                                }

                            } else {
                                feedback = "submission unsuccessful 3";
                            }
                        } catch (Exception e) {
                            feedback = "ERROR 2";
                        }
                    } else {
                        feedback = "submission unsuccessful 1";
                    }
                } catch (Exception e) {
                    feedback = "ERR0R 1";
                }
            } else {
                switch (item) {
                    case 0:
                        feedback = "Book selected is not available, due back on  " + notavailable;
                        break;
                    case 1:
                        feedback = "Video selected is not available, due back on  " + notavailable;
                        break;
                    case 2:
                        feedback = "Magazine selected is not available, due back on  " + notavailable;
                        break;
                    case 3:
                        feedback = "Audio selected is not available, due back on  " + notavailable;
                        ;
                        break;
                }
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
            feedback = "Please Fill In All Fields First ";
        }
        tLabel.setText(feedback);
        idTextField.setText("");
        itemTextField.setText("");
        ddTextField.setText("");
        amountTextField.setText("");
        borrowButton.setEnabled(false);
    }//GEN-LAST:event_borrowButtonActionPerformed
    String storeTransactionID, itemidstore;
    int itemstore;
    private void detailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailsButtonActionPerformed
        // TODO add your handling code here:
        returnLabel.setText("");
        String idmember = memberIDTextField.getText();
        String feedback = "";
        try {
            ResultSet result = null, result1 = null;
            Connection con = null;
            //Load JBBC driver "com.mysql.jdbc.Driver"
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "");

            PreparedStatement statement = con.prepareStatement("SELECT * FROM library.transactions WHERE memberID = '" + idmember + "' AND rDate = '2000-01-01'");
            result = statement.executeQuery();
            int i = 0;
            while (result.next()) {
                if (i > 0) {
                    feedback += ", ";
                }
                storeTransactionID = result.getString(1);
                String itemid = result.getString(3);
                itemidstore = itemid;
                int item = Integer.parseInt(result.getString(8));
                itemstore = item;

                switch (item) {

                    case 0:
                        // tLabel.setText("case 0");
                        PreparedStatement statement1 = con.prepareStatement("SELECT * FROM library.books WHERE id = '" + itemid + "'");
                        result1 = statement1.executeQuery();
                        while (result1.next()) {
                            feedback += result1.getString(2);
                        }
                        break;
                    case 1:
                        //tLabel.setText("case 1");
                        PreparedStatement statement2 = con.prepareStatement("SELECT * FROM library.videos WHERE id = '" + itemid + "'");
                        result1 = statement2.executeQuery();
                        while (result1.next()) {
                            feedback += result1.getString(2);
                        }
                        break;
                    case 2:
                        // tLabel.setText("case 2");
                        PreparedStatement statement3 = con.prepareStatement("SELECT * FROM library.magazines WHERE id = '" + itemid + "'");
                        result1 = statement3.executeQuery();
                        while (result1.next()) {
                            feedback += result1.getString(2);
                        }
                        break;
                    case 3:
                        //tLabel.setText("case 3");
                        PreparedStatement statement4 = con.prepareStatement("SELECT * FROM library.audio WHERE id = '" + itemid + "'");
                        result1 = statement4.executeQuery();
                        while (result1.next()) {
                            feedback += result1.getString(2);
                        }
                        break;

                }
                feedback += " Due On " + result.getString(5);
                i += 1;
                memberIDTextField.setEditable(false);
                returnButton.setEnabled(true);
            }
            if(i==0){
               feedback += "Member Has No Borrowed Items On Record ";
            }

            result.close();
            con.close();

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        Labelpending.setText(feedback);
        
    }//GEN-LAST:event_detailsButtonActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        // TODO add your handling code here:
        int updateQuery = 0, updateQuery1 = 0, updateQuery3 = 0;

        String feedback;
        try {
            Connection con = null;
            //Load JBBC driver "com.mysql.jdbc.Driver"
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "");

            //PreparedStatement statement = con.prepareStatement("DELETE FROM library.transactions WHERE id ='" + storeTransactionID + "'");
            PreparedStatement statement = con.prepareStatement("UPDATE library.transactions SET rDate = CURDATE() WHERE id ='" + storeTransactionID + "'");
            updateQuery = statement.executeUpdate();
            if (updateQuery != 0) {
                String table = null;
                switch (itemstore) {
                    case 0:
                        table = "library.books";
                        break;
                    case 1:
                        table = "library.videos";
                        break;
                    case 2:
                        table = "library.magazines";
                        break;
                    case 3:
                        table = "library.audio";
                        break;
                }

                PreparedStatement statement1 = con.prepareStatement("UPDATE " + table + " SET status = 1 WHERE id = '" + itemidstore + "'");
                updateQuery1 = statement1.executeUpdate();
                if (updateQuery1 != 0) {
                    PreparedStatement statement2 = con.prepareStatement("SELECT  owing FROM library.members WHERE id = '" + memberIDTextField.getText() + "'");
                    ResultSet result2 = statement2.executeQuery();
                    while (result2.next()) {
                        int owing = Integer.parseInt(result2.getString(1));
                        int newOwing = owing + Integer.parseInt(fineTextField.getText());

                        PreparedStatement statement3 = con.prepareStatement("UPDATE library.members SET owing = '" + newOwing + "' WHERE id = '" + memberIDTextField.getText() + "'");
                        updateQuery3 = statement3.executeUpdate();

                        if(updateQuery3 != 0){
                            feedback = "Transaction Details Have Been Stored";
                        }
                    }

                    
                } else {
                    feedback = "submission unsuccessful 3";
                }
                feedback = " Item marked as returned";
            } else {
                feedback = "submission unsuccessful 1" + storeTransactionID;
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
            feedback = "submission unsuccessful 2";
        }
        returnLabel.setText(feedback);
        memberIDTextField.setText("");
        fineTextField.setText("");
        returnButton.setEnabled(false);
        memberIDTextField.setEditable(true);
    }//GEN-LAST:event_returnButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        returnButton.setEnabled(false);
        memberIDTextField.setEditable(true);
        memberIDTextField.setText("");
        returnLabel.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Labelpending;
    private javax.swing.JTextField amountTextField;
    private javax.swing.JButton borrowButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton cancelButton1;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton clearButton1;
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField ddTextField;
    private javax.swing.JButton detailsButton;
    private javax.swing.JTextField fineTextField;
    private javax.swing.JButton getButton;
    private javax.swing.JTextField idTextField;
    private javax.swing.JComboBox itemComboBox;
    private javax.swing.JTextField itemTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField memberIDTextField;
    private javax.swing.JLabel pendingLabel;
    private javax.swing.JButton returnButton;
    private javax.swing.JLabel returnLabel;
    private javax.swing.JLabel tLabel;
    // End of variables declaration//GEN-END:variables

    public void printReceipt(String date, String memberid, int item1, String itemid) throws IOException {
        String table = null, item = null, feedback = null, name = null;
        switch (item1) {
            case 0:
                table = "library.books";
                break;
            case 1:
                table = "library.videos";
                break;
            case 2:
                table = "library.magazines";
                break;
            case 3:
                table = "library.audio";
                break;
        }
        try {
            Connection con = null;
            //Load JBBC driver "com.mysql.jdbc.Driver"
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "");

            PreparedStatement statement = con.prepareStatement("SELECT * FROM " + table + " WHERE id = '" + itemid + "'");
            ResultSet result = statement.executeQuery();
            while (result.next()) {
                item = result.getString(2);
            }

            PreparedStatement statement1 = con.prepareStatement("SELECT name FROM library.members WHERE id = '" + memberid + "'");
            ResultSet result1 = statement1.executeQuery();
            while (result1.next()) {
                name = result1.getString(1);
            }


        } catch (Exception e) {
            System.out.print(e);
        }
        FileWriter ryt = new FileWriter("C:\\Receipt\\MyLibraryReceipt.txt");
        BufferedWriter out = new BufferedWriter(ryt);
        //String name = JOptionPane.showInputDialog("Enter your name pls.");
        int fill = 13 - storeamountstring.length();
        String fillString = "";

        for (int j = 0; j < fill; j++) {
            fillString += " ";
        }
        fillString += storeamountstring + " ";

        int fill1 = 50 - item.length();
        String reportString = item;

        for (int i = 0; i < fill1; i++) {
            reportString += " ";
        }

        int fillname = 50 - name.length();
        String nameString = name;

        for (int k = 0; k < fillname; k++) {
            nameString += " ";
        }

        out.write("-----------------------------------------------------------------------------------------------------");
        out.write("\r\n|MyLIBRARY                                                         |                                |");
        out.write("\r\n|              Member                                              |     Date                       |");
        out.write("\r\n|---------------------------------------------------------------------------------------------------|");
        out.write("\r\n|           " + nameString + "     |    " + date + "                  |");
        out.write("\r\n|---------------------------------------------------------------------------------------------------|");
        out.write("\r\n|                                                                                                   |");
        out.write("\r\n|                                                                                                   |");
        out.write("\r\n|                                                                                                   |");
        out.write("\r\n|---------------------------------------------------------------------------------------------------|");
        out.write("\r\n|                Item                                              |     Date Due    |  Amount(KShs)|");
        out.write("\r\n|---------------------------------------------------------------------------------------------------|");
        out.write("\r\n|           " + reportString + "     |   " + storedatedue + "    |" + fillString + "|");
        out.write("\r\n|                                                                  |                 |              |");
        out.write("\r\n|                                                                  |                 |              |");
        out.write("\r\n|                                                                  |                 |              |");
        out.write("\r\n|                                                                  |                 |              |");
        out.write("\r\n|                                                                  |                 |              |");
        out.write("\r\n|                                                                  |                 |              |");
        out.write("\r\n|---------------------------------------------------------------------------------------------------|");
        out.write("\r\n|                                                                 Total Amount (KShs)|" + fillString + "|");
        out.write("\r\n-----------------------------------------------------------------------------------------------------");
        out.close();

        String x = tLabel.getText();
        tLabel.setText(x + " " + feedback);
    }
}
